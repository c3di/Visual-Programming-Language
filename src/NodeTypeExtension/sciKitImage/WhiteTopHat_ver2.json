{
    "enable": true,
    "nodes": {
      "White_Tophat": {
        "type": "White_Tophat",
        "category": "function",
        "title": "white top hat",
        "tooltip": "The white top hat of an image is defined as the image minus its morphological opening. ",
        "externalImports": "from skimage.morphology import white_tophat",
        "codeGenerator": "function code(inputs, outputs, node, generator) {\r\n  // Begin Python code generation\r\n  let outputMetadata;\r\n\r\n  \r\n\r\n  throw new Error( `${inputs[1]}` )\r\n  const metadata = inputs[1]['metadata'];\r\n\r\n  if (metadata.colorChannel === 'grayscale' && metadata.intensityRange === '0-1') {\r\n    outputMetadata = {'colorChannel': 'grayscale', 'channelOrder': 'none', 'isMiniBatched': false, 'intensityRange': '0-1', 'device': 'cpu'};\r\n  } else if (metadata.colorChannel === 'grayscale' && metadata.intensityRange === '0-255') {\r\n    outputMetadata = {'colorChannel': 'grayscale', 'channelOrder': 'none', 'isMiniBatched': false, 'intensityRange': '0-255', 'device': 'cpu'};\r\n  } else if (metadata.colorChannel === 'rgb') {\r\n    outputMetadata = {'colorChannel': 'rgb', 'channelOrder': 'channelLast', 'isMiniBatched': false, 'intensityRange': '0-255', 'device': 'cpu'};\r\n  } else if (metadata.colorChannel === 'bgr') {\r\n    outputMetadata = {'colorChannel': 'bgr', 'channelOrder': 'channelLast', 'isMiniBatched': false, 'intensityRange': '0-255', 'device': 'cpu'};\r\n  }\r\n\r\n  const code = `${outputs[1]} = white_tophat(${inputs[1]}['value'], ${inputs[2]}, ${inputs[3]})\r\n${outputs[1]} = {\r\n  'value': ${outputs[1]},\r\n  'dataType': 'numpy.ndarray',\r\n  'metadata': outputMetadata\r\n}\r\n${outputs[0]}`;\r\n\r\n  return code;\r\n}",
        "inputs": {
          "execIn": {
            "title": "execIn",
            "dataType": "exec",
            "showWidget": false,
            "showTitle": false
          },
          "image": {
            "title": "image",
            "dataType": "image",
            "defaultValue": {
              "dataType": "numpy.ndarray",
              "metadata": [
                {
                  "colorChannel": "grayscale",
                  "channelOrder": "none",
                  "isMiniBatched": false,
                  "intensityRange": "0-1"
                },
                {
                  "colorChannel": "grayscale",
                  "channelOrder": "none",
                  "isMiniBatched": false,
                  "intensityRange": "0-255"
                },
                {
                  "colorChannel": "rgb",
                  "channelOrder": "channelLast",
                  "isMiniBatched": false,
                  "intensityRange": "0-255"
                },
                {
                  "colorChannel": "gbr",
                  "channelOrder": "channelLast",
                  "isMiniBatched": false,
                  "intensityRange": "0-255"
                }
              ]
            },
            "tooltip": "Image array."
          },
          "footprint": {
            "title": "footprint",
            "dataType": "numpy.ndarray",
            "defaultValue": "None",
            "tooltip": "The neighborhood expressed as a 2-D array of 1’s and 0’s."
          },
          "out": {
            "title": "out",
            "dataType": "numpy.ndarray",
            "defaultValue": "None",
            "tooltip": "The array to store the result of the morphology."
          }
        },
        "outputs": {
          "execOut": {
            "title": "execOut",
            "dataType": "exec",
            "showWidget": false,
            "showTitle": false
          },
          "image": {
            "title": "image",
            "dataType": "image",
            "defaultValue": {
              "dataType": "numpy.ndarray",
              "metadata": [
                {
                  "colorChannel": "grayscale",
                  "channelOrder": "none",
                  "isMiniBatched": false,
                  "intensityRange": "0-1"
                },
                {
                  "colorChannel": "grayscale",
                  "channelOrder": "none",
                  "isMiniBatched": false,
                  "intensityRange": "0-255"
                },
                {
                  "colorChannel": "rgb",
                  "channelOrder": "channelLast",
                  "isMiniBatched": false,
                  "intensityRange": "0-255"
                },
                {
                  "colorChannel": "gbr",
                  "channelOrder": "channelLast",
                  "isMiniBatched": false,
                  "intensityRange": "0-255"
                }
              ]
            },
            "tooltip": "The result of the morphological white top hat."
          }
        }
      }
    }
  }